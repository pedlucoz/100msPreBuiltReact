import { HMSPeer as IHMSPeer } from '../../../interfaces/peer';
import { HMSRole } from '../../../interfaces/role';
import { HMSAudioTrack, HMSTrack, HMSVideoTrack } from '../../../media/tracks';
export declare type HMSPeerInit = {
    peerId: string;
    name: string;
    isLocal: boolean;
    customerUserId?: string;
    metadata?: string;
    role?: HMSRole;
    joinedAt?: Date;
    fromRoomState?: boolean;
};
export declare class HMSPeer implements IHMSPeer {
    readonly peerId: string;
    readonly isLocal: boolean;
    name: string;
    customerUserId?: string;
    metadata?: string;
    audioTrack?: HMSAudioTrack;
    videoTrack?: HMSVideoTrack;
    auxiliaryTracks: HMSTrack[];
    role?: HMSRole;
    joinedAt?: Date;
    constructor({ peerId, name, isLocal, customerUserId, metadata, role, joinedAt }: HMSPeerInit);
    /**
     * @internal
     */
    updateRole(newRole: HMSRole): void;
    /**
     * @internal
     */
    updateName(newName: string): void;
    /**
     * @internal
     */
    updateMetadata(data: string): void;
    toString(): string;
}
