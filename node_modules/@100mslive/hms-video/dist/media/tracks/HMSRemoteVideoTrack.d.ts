import { HMSVideoTrack } from './HMSVideoTrack';
import { VideoTrackLayerUpdate } from '../../connection/channel-messages';
import { HMSPreferredSimulcastLayer, HMSSimulcastLayer, HMSSimulcastLayerDefinition } from '../../interfaces/simulcast-layers';
export declare class HMSRemoteVideoTrack extends HMSVideoTrack {
    private _degraded;
    private _degradedAt;
    private _layerDefinitions;
    private history;
    private preferredLayer;
    get degraded(): boolean;
    get degradedAt(): Date | null;
    setEnabled(value: boolean): Promise<void>;
    setPreferredLayer(layer: HMSPreferredSimulcastLayer): Promise<void>;
    /**
     * @deprecated
     * @returns {HMSSimulcastLayer}
     */
    getSimulcastLayer(): HMSSimulcastLayer;
    getLayer(): HMSSimulcastLayer;
    getPreferredLayer(): HMSPreferredSimulcastLayer;
    addSink(videoElement: HTMLVideoElement): Promise<void>;
    removeSink(videoElement: HTMLVideoElement): Promise<void>;
    /**
     * Method to get available simulcast definitions for the track
     * @returns {HMSSimulcastLayerDefinition[]}
     */
    getSimulcastDefinitions(): HMSSimulcastLayerDefinition[];
    /** @internal */
    setSimulcastDefinitons(definitions: HMSSimulcastLayerDefinition[]): void;
    /**
     * @internal
     * SFU will change track's layer(degrade or restore) and tell the sdk to update
     * it locally.
     * @returns {boolean} isDegraded - returns true if degraded
     * */
    setLayerFromServer(layerUpdate: VideoTrackLayerUpdate): boolean;
    /**
     * @internal
     * If degradation is being managed by sdk, sdk will let the track know of status
     * post which it'll set it as well and send prefer layer message to SFU.
     * */
    setDegradedFromSdk(value: boolean): void;
    private updateLayer;
    private pushInHistory;
    private requestLayer;
    /**
     * given the new layer, figure out if the update should be sent to server or not.
     * It won't be sent if the track is already on the targetLayer. If the track is
     * degraded though and the target layer is none, update will be sent.
     * If there are tracks degraded on a page and user paginates away to other page,
     * it's necessary to send the layer none message to SFU so it knows that the app
     * is no longer interested in the track and doesn't recover degraded tracks on non
     * visible pages.
     *
     * TODO: if track is degraded, send the update if target layer is lower than current layer
     * @private
     */
    private shouldSendVideoLayer;
}
